"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.6.
See https://docs.djangoproject.com/en/5.2/topics/settings/
"""

import os
from pathlib import Path
from datetime import timedelta

# Third-party imports for environment variables and database URL parsing (in production)
import dj_database_url
from decouple import config

# assign env vars to variables with defaults for development
DEBUG = config('DEBUG', default=False, cast=bool)
SECRET_KEY = config('SECRET_KEY')

# -------------------------------------------------------------------
# BASE DIRECTORY
# -------------------------------------------------------------------
BASE_DIR = Path(__file__).resolve().parent.parent

# -------------------------------------------------------------------
# SECURITY SETTINGS
# -------------------------------------------------------------------
SECRET_KEY = "django-insecure-1(lig&v^j^v7@@lsg+pwts#l5-at4a1ofx3=$rju13-jw+izru"  # ‚ùóReplace with env var in prod

DEBUG = True  # Change to False in production

ALLOWED_HOSTS = ['*']  # Add domain/IP for production e.g. ['yourdomain.com', '127.0.0.1'](Render URL)

CSRF_TRUSTED_ORIGINS = [
    "https://localhost:8000",  # Only needed if using HTTPS in local dev
]

# -------------------------------------------------------------------
# INSTALLED APPS
# -------------------------------------------------------------------
INSTALLED_APPS = [
    # Django core apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Third-party apps
    "rest_framework",
    "rest_framework_simplejwt",
    "drf_yasg",
    "corsheaders",

    # Local apps
    "users",
    "jobs",
    "categories",
    "applications",
]

# -------------------------------------------------------------------
# MIDDLEWARE
# -------------------------------------------------------------------
MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware', # Serve static files in production

    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware", # Handles user authentication
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# -------------------------------------------------------------------
# URL CONFIGURATION
# -------------------------------------------------------------------
ROOT_URLCONF = "core.urls"

# -------------------------------------------------------------------
# TEMPLATES
# -------------------------------------------------------------------
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],  # Add 'templates' directory here if you use custom HTML templates
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# -------------------------------------------------------------------
# WSGI APPLICATION
# -------------------------------------------------------------------
WSGI_APPLICATION = "core.wsgi.application"

# -------------------------------------------------------------------
# DATABASE Configuration (SQLite for development)
# -------------------------------------------------------------------
DATABASES = {
    "default": {
        'default': dj_database_url.config(default=config('DATABASE_URL')),
        # "ENGINE": "django.db.backends.sqlite3",
        # "NAME": BASE_DIR / "db.sqlite3",
    }
}

# -------------------------------------------------------------------
# DATABASE CONFIG FOR PRODUCTION (PostgreSQL) use(.env vars in prod)
# -------------------------------------------------------------------
# "ENGINE": "django.db.backends.postgresql",
# "NAME": "your_db_name",
# "USER": "your_db_user",
# "PASSWORD": "your_db_password",
# "HOST": "localhost",
# "PORT": "5432",

# -------------------------------------------------------------------
# AUTHENTICATION
# -------------------------------------------------------------------
https://meet.jit.si/Soft~Techs

# -------------------------------------------------------------------
# PASSWORD VALIDATION
# -------------------------------------------------------------------
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# -------------------------------------------------------------------
# INTERNATIONALIZATION
# -------------------------------------------------------------------
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# -------------------------------------------------------------------
# STATIC FILES
# -------------------------------------------------------------------
STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # For production use with collectstatic

# -------------------------------------------------------------------
# DEFAULT PRIMARY KEY FIELD TYPE
# -------------------------------------------------------------------
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# -------------------------------------------------------------------
# REST FRAMEWORK SETTINGS
# -------------------------------------------------------------------
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_FILTER_BACKENDS": [
        "rest_framework.filters.SearchFilter",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
}

# -------------------------------------------------------------------
# JWT SETTINGS
# -------------------------------------------------------------------
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "AUTH_HEADER_TYPES": ("Bearer",),
}

# CORS
CORS_ALLOW_ALL_ORIGINS = True # Allow all origins for development
CORS_ALLOW_CREDENTIALS = True # Allow cookies to be sent in cross-origin requests

# CSRF (for local dev)
CSRF_COOKIE_SECURE = False # Relax CSRF: Set to True in production if using HTTPS
SESSION_COOKIE_SECURE = False # Set to True in production if using HTTPS
CSRF_TRUSTED_ORIGINS = [
    "https://reimagined-acorn-w9w7qq455xjh5xq6-8000.app.github.dev",
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]
# In production, specify allowed origins:
# CORS_ALLOWED_ORIGINS = [
#     "https://yourdomain.com",
#     "http://localhost:3000", # frontend runs on this port
# ]

# to suppress collectstatic errors
#WHITENOISE_AUTOREFRESH = True